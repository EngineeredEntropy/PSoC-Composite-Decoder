ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"LCD_ShiftReg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LCD_ShiftReg_EnableInt,"ax",%progbits
  20              		.align	2
  21              		.global	LCD_ShiftReg_EnableInt
  22              		.thumb
  23              		.thumb_func
  24              		.type	LCD_ShiftReg_EnableInt, %function
  25              	LCD_ShiftReg_EnableInt:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\LCD_ShiftReg.c"
   1:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/LCD_ShiftReg.c **** * File Name: LCD_ShiftReg.c
   3:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Version 2.30
   4:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
   5:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Description:
   6:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  This file provides the API source code for the Shift Register component.
   7:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
   8:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Note: none
   9:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  10:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
  11:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/LCD_ShiftReg.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/LCD_ShiftReg.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/LCD_ShiftReg.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************/
  16:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  17:Generated_Source\PSoC5/LCD_ShiftReg.c **** #include "LCD_ShiftReg.h"
  18:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  19:Generated_Source\PSoC5/LCD_ShiftReg.c **** uint8 LCD_ShiftReg_initVar = 0u;
  20:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  21:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  22:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
  23:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_Start
  24:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
  25:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  26:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
  27:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Starts the Shift Register.
  28:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  29:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
  30:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 2


  31:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  32:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
  33:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
  34:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  35:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Global Variables:
  36:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  LCD_ShiftReg_initVar - used to check initial configuration, modified on
  37:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  first function call.
  38:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  39:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Reentrant:
  40:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  No.
  41:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  42:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_Start(void) 
  44:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
  45:Generated_Source\PSoC5/LCD_ShiftReg.c ****     if(0u == LCD_ShiftReg_initVar)
  46:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
  47:Generated_Source\PSoC5/LCD_ShiftReg.c ****         LCD_ShiftReg_Init();
  48:Generated_Source\PSoC5/LCD_ShiftReg.c ****         LCD_ShiftReg_initVar = 1u; /* Component initialized */
  49:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
  50:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  51:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_Enable();
  52:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
  53:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  54:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  55:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
  56:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_Enable
  57:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
  58:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  59:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
  60:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Enables the Shift Register.
  61:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  62:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
  63:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  void.
  64:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  65:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
  66:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  void.
  67:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  68:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
  69:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_Enable(void) 
  70:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
  71:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /* Changing address in Datapath Control Store
  72:Generated_Source\PSoC5/LCD_ShiftReg.c ****        from NOP to component state machine commands space */
  73:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_CONTROL |= LCD_ShiftReg_CLK_EN;
  74:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  75:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_EnableInt();
  76:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
  77:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  78:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  79:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
  80:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_Init
  81:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
  82:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  83:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
  84:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Initializes Tx and/or Rx interrupt sources with initial values.
  85:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  86:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
  87:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  void.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 3


  88:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  89:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
  90:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  void.
  91:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
  92:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
  93:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_Init(void) 
  94:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
  95:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SetIntMode(LCD_ShiftReg_INT_SRC);
  96:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
  97:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  98:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  99:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_Stop
 101:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 102:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 103:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 104:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Disables the Shift Register
 105:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 106:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 107:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 108:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 109:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 110:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 111:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 112:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 113:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_Stop(void) 
 114:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 115:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /*changing Datapath Control Store address to NOP space*/
 116:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_CONTROL &= ((uint8) ~LCD_ShiftReg_CLK_EN);
 117:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_DisableInt();
 118:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 119:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 120:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 121:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_EnableInt
 123:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 124:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 125:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 126:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Enables the Shift Register interrupt.
 127:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 128:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 129:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 130:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 131:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 132:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 133:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 134:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_EnableInt(void) 
 136:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
  28              		.loc 1 136 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 4


 137:Generated_Source\PSoC5/LCD_ShiftReg.c ****     uint8 interruptState;
 138:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 139:Generated_Source\PSoC5/LCD_ShiftReg.c ****     interruptState = CyEnterCriticalSection();
  36              		.loc 1 139 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 140:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_AUX_CONTROL |= LCD_ShiftReg_INTERRUPTS_ENABLE;
  39              		.loc 1 140 0
  40 0006 044A     		ldr	r2, .L3
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000a 43F01003 		orr	r3, r3, #16
  43 000e 1370     		strb	r3, [r2]
 141:Generated_Source\PSoC5/LCD_ShiftReg.c ****     CyExitCriticalSection(interruptState);
  44              		.loc 1 141 0
  45 0010 FFF7FEFF 		bl	CyExitCriticalSection
  46              	.LVL1:
  47 0014 08BD     		pop	{r3, pc}
  48              	.L4:
  49 0016 00BF     		.align	2
  50              	.L3:
  51 0018 9B640040 		.word	1073767579
  52              		.cfi_endproc
  53              	.LFE4:
  54              		.size	LCD_ShiftReg_EnableInt, .-LCD_ShiftReg_EnableInt
  55              		.section	.text.LCD_ShiftReg_Enable,"ax",%progbits
  56              		.align	2
  57              		.global	LCD_ShiftReg_Enable
  58              		.thumb
  59              		.thumb_func
  60              		.type	LCD_ShiftReg_Enable, %function
  61              	LCD_ShiftReg_Enable:
  62              	.LFB1:
  70:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /* Changing address in Datapath Control Store
  63              		.loc 1 70 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67 0000 08B5     		push	{r3, lr}
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 3, -8
  70              		.cfi_offset 14, -4
  73:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
  71              		.loc 1 73 0
  72 0002 044A     		ldr	r2, .L7
  73 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  74 0006 43F00103 		orr	r3, r3, #1
  75 000a 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
  76              		.loc 1 75 0
  77 000c FFF7FEFF 		bl	LCD_ShiftReg_EnableInt
  78              	.LVL2:
  79 0010 08BD     		pop	{r3, pc}
  80              	.L8:
  81 0012 00BF     		.align	2
  82              	.L7:
  83 0014 7B640040 		.word	1073767547
  84              		.cfi_endproc
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 5


  85              	.LFE1:
  86              		.size	LCD_ShiftReg_Enable, .-LCD_ShiftReg_Enable
  87              		.section	.text.LCD_ShiftReg_DisableInt,"ax",%progbits
  88              		.align	2
  89              		.global	LCD_ShiftReg_DisableInt
  90              		.thumb
  91              		.thumb_func
  92              		.type	LCD_ShiftReg_DisableInt, %function
  93              	LCD_ShiftReg_DisableInt:
  94              	.LFB5:
 142:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 143:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 144:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 145:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 146:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_DisableInt
 147:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 148:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 149:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 150:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Disables the Shift Register interrupt.
 151:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 152:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 153:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 154:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 155:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 156:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 157:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 158:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 159:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_DisableInt(void) 
 160:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
  95              		.loc 1 160 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 08B5     		push	{r3, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
 102              		.cfi_offset 14, -4
 161:Generated_Source\PSoC5/LCD_ShiftReg.c ****     uint8 interruptState;
 162:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 163:Generated_Source\PSoC5/LCD_ShiftReg.c ****     interruptState = CyEnterCriticalSection();
 103              		.loc 1 163 0
 104 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 105              	.LVL3:
 164:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_AUX_CONTROL &= ((uint8) ~LCD_ShiftReg_INTERRUPTS_ENABLE);
 106              		.loc 1 164 0
 107 0006 044A     		ldr	r2, .L11
 108 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 109 000a 03F0EF03 		and	r3, r3, #239
 110 000e 1370     		strb	r3, [r2]
 165:Generated_Source\PSoC5/LCD_ShiftReg.c ****     CyExitCriticalSection(interruptState);
 111              		.loc 1 165 0
 112 0010 FFF7FEFF 		bl	CyExitCriticalSection
 113              	.LVL4:
 114 0014 08BD     		pop	{r3, pc}
 115              	.L12:
 116 0016 00BF     		.align	2
 117              	.L11:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 6


 118 0018 9B640040 		.word	1073767579
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	LCD_ShiftReg_DisableInt, .-LCD_ShiftReg_DisableInt
 122              		.section	.text.LCD_ShiftReg_Stop,"ax",%progbits
 123              		.align	2
 124              		.global	LCD_ShiftReg_Stop
 125              		.thumb
 126              		.thumb_func
 127              		.type	LCD_ShiftReg_Stop, %function
 128              	LCD_ShiftReg_Stop:
 129              	.LFB3:
 114:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /*changing Datapath Control Store address to NOP space*/
 130              		.loc 1 114 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 08B5     		push	{r3, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 3, -8
 137              		.cfi_offset 14, -4
 116:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_DisableInt();
 138              		.loc 1 116 0
 139 0002 044A     		ldr	r2, .L15
 140 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 0006 03F0FE03 		and	r3, r3, #254
 142 000a 1370     		strb	r3, [r2]
 117:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 143              		.loc 1 117 0
 144 000c FFF7FEFF 		bl	LCD_ShiftReg_DisableInt
 145              	.LVL5:
 146 0010 08BD     		pop	{r3, pc}
 147              	.L16:
 148 0012 00BF     		.align	2
 149              	.L15:
 150 0014 7B640040 		.word	1073767547
 151              		.cfi_endproc
 152              	.LFE3:
 153              		.size	LCD_ShiftReg_Stop, .-LCD_ShiftReg_Stop
 154              		.section	.text.LCD_ShiftReg_GetFIFOStatus,"ax",%progbits
 155              		.align	2
 156              		.global	LCD_ShiftReg_GetFIFOStatus
 157              		.thumb
 158              		.thumb_func
 159              		.type	LCD_ShiftReg_GetFIFOStatus, %function
 160              	LCD_ShiftReg_GetFIFOStatus:
 161              	.LFB6:
 166:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 167:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 168:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 169:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 170:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_GetFIFOStatus
 171:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 172:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 173:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 174:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Returns current status of input or output FIFO.
 175:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 7


 176:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 177:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  fifoId.
 178:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 179:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 180:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  FIFO status.
 181:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 182:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/LCD_ShiftReg.c **** uint8 LCD_ShiftReg_GetFIFOStatus(uint8 fifoId) 
 184:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 162              		.loc 1 184 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL6:
 168 0000 0346     		mov	r3, r0
 169              	.LVL7:
 185:Generated_Source\PSoC5/LCD_ShiftReg.c ****     uint8 result;
 186:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 187:Generated_Source\PSoC5/LCD_ShiftReg.c ****     result = LCD_ShiftReg_RET_FIFO_NOT_DEFINED;
 188:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 189:Generated_Source\PSoC5/LCD_ShiftReg.c ****     #if(0u != LCD_ShiftReg_USE_INPUT_FIFO)
 190:Generated_Source\PSoC5/LCD_ShiftReg.c ****         if(LCD_ShiftReg_IN_FIFO == fifoId)
 170              		.loc 1 190 0
 171 0002 0128     		cmp	r0, #1
 172 0004 0BD1     		bne	.L24
 191:Generated_Source\PSoC5/LCD_ShiftReg.c ****         {
 192:Generated_Source\PSoC5/LCD_ShiftReg.c ****             switch(LCD_ShiftReg_GET_IN_FIFO_STS)
 173              		.loc 1 192 0
 174 0006 0F4A     		ldr	r2, .L28
 175 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 176 000a C2F3C102 		ubfx	r2, r2, #3, #2
 177 000e 12B1     		cbz	r2, .L19
 178 0010 022A     		cmp	r2, #2
 179 0012 02D0     		beq	.L20
 180 0014 05E0     		b	.L27
 181              	.L19:
 193:Generated_Source\PSoC5/LCD_ShiftReg.c ****             {
 194:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 case LCD_ShiftReg_IN_FIFO_FULL :
 195:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     result = LCD_ShiftReg_RET_FIFO_FULL;
 182              		.loc 1 195 0
 183 0016 0020     		movs	r0, #0
 184              	.LVL8:
 185 0018 04E0     		b	.L18
 186              	.LVL9:
 187              	.L20:
 196:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     break;
 197:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 198:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 case LCD_ShiftReg_IN_FIFO_EMPTY :
 199:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     result = LCD_ShiftReg_RET_FIFO_EMPTY;
 200:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     break;
 201:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 202:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 case LCD_ShiftReg_IN_FIFO_PARTIAL:
 203:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     result = LCD_ShiftReg_RET_FIFO_PARTIAL;
 188              		.loc 1 203 0
 189 001a 0120     		movs	r0, #1
 190              	.LVL10:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 8


 204:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     break;
 191              		.loc 1 204 0
 192 001c 02E0     		b	.L18
 193              	.LVL11:
 194              	.L24:
 187:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 195              		.loc 1 187 0
 196 001e FE20     		movs	r0, #254
 197              	.LVL12:
 198 0020 00E0     		b	.L18
 199              	.LVL13:
 200              	.L27:
 199:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     break;
 201              		.loc 1 199 0
 202 0022 0220     		movs	r0, #2
 203              	.LVL14:
 204              	.L18:
 205:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     
 206:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 default:
 207:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     /* Initial result value, while 
 208:Generated_Source\PSoC5/LCD_ShiftReg.c ****                        IN_FIFO_EMPTY case is false 
 209:Generated_Source\PSoC5/LCD_ShiftReg.c ****                      */
 210:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     result = LCD_ShiftReg_RET_FIFO_EMPTY;
 211:Generated_Source\PSoC5/LCD_ShiftReg.c ****                     break;
 212:Generated_Source\PSoC5/LCD_ShiftReg.c ****             }   
 213:Generated_Source\PSoC5/LCD_ShiftReg.c ****         }
 214:Generated_Source\PSoC5/LCD_ShiftReg.c ****     #endif /* (0u != LCD_ShiftReg_USE_INPUT_FIFO) */
 215:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 216:Generated_Source\PSoC5/LCD_ShiftReg.c ****     if(LCD_ShiftReg_OUT_FIFO == fifoId)
 205              		.loc 1 216 0
 206 0024 022B     		cmp	r3, #2
 207 0026 0BD1     		bne	.L21
 217:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
 218:Generated_Source\PSoC5/LCD_ShiftReg.c ****         switch(LCD_ShiftReg_GET_OUT_FIFO_STS)
 208              		.loc 1 218 0
 209 0028 064B     		ldr	r3, .L28
 210 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211 002c C3F34113 		ubfx	r3, r3, #5, #2
 212 0030 2BB1     		cbz	r3, .L26
 213 0032 022B     		cmp	r3, #2
 214 0034 01D0     		beq	.L23
 219:Generated_Source\PSoC5/LCD_ShiftReg.c ****         {
 220:Generated_Source\PSoC5/LCD_ShiftReg.c ****             case LCD_ShiftReg_OUT_FIFO_FULL :
 221:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 result = LCD_ShiftReg_RET_FIFO_FULL;
 215              		.loc 1 221 0
 216 0036 0020     		movs	r0, #0
 217              	.LVL15:
 218 0038 7047     		bx	lr
 219              	.LVL16:
 220              	.L23:
 222:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 break;
 223:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 224:Generated_Source\PSoC5/LCD_ShiftReg.c ****             case LCD_ShiftReg_OUT_FIFO_EMPTY :
 225:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 result = LCD_ShiftReg_RET_FIFO_EMPTY;
 226:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 break;
 227:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 228:Generated_Source\PSoC5/LCD_ShiftReg.c ****             case LCD_ShiftReg_OUT_FIFO_PARTIAL :
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 9


 229:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 result = LCD_ShiftReg_RET_FIFO_PARTIAL;
 221              		.loc 1 229 0
 222 003a 0120     		movs	r0, #1
 230:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 break;
 223              		.loc 1 230 0
 224 003c 7047     		bx	lr
 225              	.LVL17:
 226              	.L26:
 225:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 break;
 227              		.loc 1 225 0
 228 003e 0220     		movs	r0, #2
 229              	.LVL18:
 230              	.L21:
 231:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 232:Generated_Source\PSoC5/LCD_ShiftReg.c ****             default:
 233:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 /* Initial result value, while 
 234:Generated_Source\PSoC5/LCD_ShiftReg.c ****                    OUT_FIFO_FULL case is false 
 235:Generated_Source\PSoC5/LCD_ShiftReg.c ****                  */
 236:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 result = LCD_ShiftReg_RET_FIFO_FULL;
 237:Generated_Source\PSoC5/LCD_ShiftReg.c ****                 break;
 238:Generated_Source\PSoC5/LCD_ShiftReg.c ****         }
 239:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
 240:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 241:Generated_Source\PSoC5/LCD_ShiftReg.c ****     return(result);
 242:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 231              		.loc 1 242 0
 232 0040 7047     		bx	lr
 233              	.L29:
 234 0042 00BF     		.align	2
 235              	.L28:
 236 0044 6B640040 		.word	1073767531
 237              		.cfi_endproc
 238              	.LFE6:
 239              		.size	LCD_ShiftReg_GetFIFOStatus, .-LCD_ShiftReg_GetFIFOStatus
 240              		.section	.text.LCD_ShiftReg_SetIntMode,"ax",%progbits
 241              		.align	2
 242              		.global	LCD_ShiftReg_SetIntMode
 243              		.thumb
 244              		.thumb_func
 245              		.type	LCD_ShiftReg_SetIntMode, %function
 246              	LCD_ShiftReg_SetIntMode:
 247              	.LFB7:
 243:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 244:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 245:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 246:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_SetIntMode
 247:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 248:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 249:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 250:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Sets the Interrupt Source for the Shift Register interrupt. Multiple
 251:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  sources may be ORed together
 252:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 253:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 254:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  interruptSource: Byte containing the constant for the selected interrupt
 255:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  source/s.
 256:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 257:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 10


 258:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 259:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 260:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_SetIntMode(uint8 interruptSource) 
 262:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 248              		.loc 1 262 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL19:
 263:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_STATUS_MASK &= ((uint8) ~LCD_ShiftReg_INTS_EN_MASK);          /* Clear existing
 254              		.loc 1 263 0
 255 0000 054B     		ldr	r3, .L31
 256 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 257 0004 02F0F802 		and	r2, r2, #248
 258 0008 1A70     		strb	r2, [r3]
 264:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SR_STATUS_MASK |= (interruptSource & LCD_ShiftReg_INTS_EN_MASK); /* Set int */
 259              		.loc 1 264 0
 260 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 261 000c 00F00700 		and	r0, r0, #7
 262              	.LVL20:
 263 0010 1043     		orrs	r0, r0, r2
 264 0012 1870     		strb	r0, [r3]
 265 0014 7047     		bx	lr
 266              	.L32:
 267 0016 00BF     		.align	2
 268              	.L31:
 269 0018 8B640040 		.word	1073767563
 270              		.cfi_endproc
 271              	.LFE7:
 272              		.size	LCD_ShiftReg_SetIntMode, .-LCD_ShiftReg_SetIntMode
 273              		.section	.text.LCD_ShiftReg_Init,"ax",%progbits
 274              		.align	2
 275              		.global	LCD_ShiftReg_Init
 276              		.thumb
 277              		.thumb_func
 278              		.type	LCD_ShiftReg_Init, %function
 279              	LCD_ShiftReg_Init:
 280              	.LFB2:
  94:Generated_Source\PSoC5/LCD_ShiftReg.c ****     LCD_ShiftReg_SetIntMode(LCD_ShiftReg_INT_SRC);
 281              		.loc 1 94 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 3, -8
 288              		.cfi_offset 14, -4
  95:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 289              		.loc 1 95 0
 290 0002 0020     		movs	r0, #0
 291 0004 FFF7FEFF 		bl	LCD_ShiftReg_SetIntMode
 292              	.LVL21:
 293 0008 08BD     		pop	{r3, pc}
 294              		.cfi_endproc
 295              	.LFE2:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 11


 296              		.size	LCD_ShiftReg_Init, .-LCD_ShiftReg_Init
 297 000a 00BF     		.section	.text.LCD_ShiftReg_Start,"ax",%progbits
 298              		.align	2
 299              		.global	LCD_ShiftReg_Start
 300              		.thumb
 301              		.thumb_func
 302              		.type	LCD_ShiftReg_Start, %function
 303              	LCD_ShiftReg_Start:
 304              	.LFB0:
  44:Generated_Source\PSoC5/LCD_ShiftReg.c ****     if(0u == LCD_ShiftReg_initVar)
 305              		.loc 1 44 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 08B5     		push	{r3, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 3, -8
 312              		.cfi_offset 14, -4
  45:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
 313              		.loc 1 45 0
 314 0002 054B     		ldr	r3, .L38
 315 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 316 0006 23B9     		cbnz	r3, .L36
  47:Generated_Source\PSoC5/LCD_ShiftReg.c ****         LCD_ShiftReg_initVar = 1u; /* Component initialized */
 317              		.loc 1 47 0
 318 0008 FFF7FEFF 		bl	LCD_ShiftReg_Init
 319              	.LVL22:
  48:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
 320              		.loc 1 48 0
 321 000c 0122     		movs	r2, #1
 322 000e 024B     		ldr	r3, .L38
 323 0010 1A70     		strb	r2, [r3]
 324              	.L36:
  51:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 325              		.loc 1 51 0
 326 0012 FFF7FEFF 		bl	LCD_ShiftReg_Enable
 327              	.LVL23:
 328 0016 08BD     		pop	{r3, pc}
 329              	.L39:
 330              		.align	2
 331              	.L38:
 332 0018 00000000 		.word	.LANCHOR0
 333              		.cfi_endproc
 334              	.LFE0:
 335              		.size	LCD_ShiftReg_Start, .-LCD_ShiftReg_Start
 336              		.section	.text.LCD_ShiftReg_GetIntStatus,"ax",%progbits
 337              		.align	2
 338              		.global	LCD_ShiftReg_GetIntStatus
 339              		.thumb
 340              		.thumb_func
 341              		.type	LCD_ShiftReg_GetIntStatus, %function
 342              	LCD_ShiftReg_GetIntStatus:
 343              	.LFB8:
 265:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 266:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 267:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 268:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 12


 269:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_GetIntStatus
 270:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 271:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 272:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 273:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Gets the Shift Register Interrupt status.
 274:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 275:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 276:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 277:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 278:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 279:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Byte containing the constant for the selected interrupt source/s.
 280:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 281:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 282:Generated_Source\PSoC5/LCD_ShiftReg.c **** uint8 LCD_ShiftReg_GetIntStatus(void) 
 283:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 344              		.loc 1 283 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 284:Generated_Source\PSoC5/LCD_ShiftReg.c ****     return(LCD_ShiftReg_SR_STATUS & LCD_ShiftReg_INTS_EN_MASK);
 349              		.loc 1 284 0
 350 0000 024B     		ldr	r3, .L41
 351 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 285:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 352              		.loc 1 285 0
 353 0004 00F00700 		and	r0, r0, #7
 354 0008 7047     		bx	lr
 355              	.L42:
 356 000a 00BF     		.align	2
 357              	.L41:
 358 000c 6B640040 		.word	1073767531
 359              		.cfi_endproc
 360              	.LFE8:
 361              		.size	LCD_ShiftReg_GetIntStatus, .-LCD_ShiftReg_GetIntStatus
 362              		.section	.text.LCD_ShiftReg_WriteRegValue,"ax",%progbits
 363              		.align	2
 364              		.global	LCD_ShiftReg_WriteRegValue
 365              		.thumb
 366              		.thumb_func
 367              		.type	LCD_ShiftReg_WriteRegValue, %function
 368              	LCD_ShiftReg_WriteRegValue:
 369              	.LFB9:
 286:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 287:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 288:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 289:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_WriteRegValue
 290:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 291:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 292:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 293:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Send state directly to shift register
 294:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 295:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 296:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  shiftData: containing shift register state.
 297:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 298:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 299:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 13


 300:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 301:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/LCD_ShiftReg.c **** void LCD_ShiftReg_WriteRegValue(uint8 shiftData)
 303:Generated_Source\PSoC5/LCD_ShiftReg.c ****                                                                      
 304:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 370              		.loc 1 304 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375              	.LVL24:
 305:Generated_Source\PSoC5/LCD_ShiftReg.c ****     CY_SET_REG8(LCD_ShiftReg_SHIFT_REG_LSB_PTR, shiftData);
 376              		.loc 1 305 0
 377 0000 014B     		ldr	r3, .L44
 378 0002 1870     		strb	r0, [r3]
 379 0004 7047     		bx	lr
 380              	.L45:
 381 0006 00BF     		.align	2
 382              	.L44:
 383 0008 0B640040 		.word	1073767435
 384              		.cfi_endproc
 385              	.LFE9:
 386              		.size	LCD_ShiftReg_WriteRegValue, .-LCD_ShiftReg_WriteRegValue
 387              		.section	.text.LCD_ShiftReg_WriteData,"ax",%progbits
 388              		.align	2
 389              		.global	LCD_ShiftReg_WriteData
 390              		.thumb
 391              		.thumb_func
 392              		.type	LCD_ShiftReg_WriteData, %function
 393              	LCD_ShiftReg_WriteData:
 394              	.LFB10:
 306:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 307:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 308:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 309:Generated_Source\PSoC5/LCD_ShiftReg.c **** #if(0u != LCD_ShiftReg_USE_INPUT_FIFO)
 310:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /*******************************************************************************
 311:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Function Name: LCD_ShiftReg_WriteData
 312:Generated_Source\PSoC5/LCD_ShiftReg.c ****     ********************************************************************************
 313:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 314:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Summary:
 315:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  Send state to FIFO for later transfer to shift register based on the Load
 316:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  input
 317:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 318:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Parameters:
 319:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  shiftData: containing shift register state.
 320:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 321:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Return:
 322:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  Indicates: successful execution of function
 323:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  when FIFO is empty; and error when FIFO is full.
 324:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 325:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Reentrant:
 326:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  No.
 327:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 328:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *******************************************************************************/
 329:Generated_Source\PSoC5/LCD_ShiftReg.c ****     cystatus LCD_ShiftReg_WriteData(uint8 shiftData)
 330:Generated_Source\PSoC5/LCD_ShiftReg.c ****                                                                          
 331:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 14


 395              		.loc 1 331 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LVL25:
 400 0000 10B5     		push	{r4, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 405              	.LVL26:
 332:Generated_Source\PSoC5/LCD_ShiftReg.c ****         cystatus result;
 333:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 334:Generated_Source\PSoC5/LCD_ShiftReg.c ****         result = CYRET_INVALID_STATE;
 335:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 336:Generated_Source\PSoC5/LCD_ShiftReg.c ****         /* Writes data into the input FIFO if it is not FULL */
 337:Generated_Source\PSoC5/LCD_ShiftReg.c ****         if(LCD_ShiftReg_RET_FIFO_FULL != (LCD_ShiftReg_GetFIFOStatus(LCD_ShiftReg_IN_FIFO)))
 406              		.loc 1 337 0
 407 0004 0120     		movs	r0, #1
 408              	.LVL27:
 409 0006 FFF7FEFF 		bl	LCD_ShiftReg_GetFIFOStatus
 410              	.LVL28:
 411 000a 18B1     		cbz	r0, .L48
 338:Generated_Source\PSoC5/LCD_ShiftReg.c ****         {
 339:Generated_Source\PSoC5/LCD_ShiftReg.c ****             CY_SET_REG8(LCD_ShiftReg_IN_FIFO_VAL_LSB_PTR, shiftData);
 412              		.loc 1 339 0
 413 000c 024B     		ldr	r3, .L50
 414 000e 1C70     		strb	r4, [r3]
 415              	.LVL29:
 340:Generated_Source\PSoC5/LCD_ShiftReg.c ****             result = CYRET_SUCCESS;
 416              		.loc 1 340 0
 417 0010 0020     		movs	r0, #0
 418 0012 10BD     		pop	{r4, pc}
 419              	.LVL30:
 420              	.L48:
 334:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 421              		.loc 1 334 0
 422 0014 1120     		movs	r0, #17
 423              	.LVL31:
 341:Generated_Source\PSoC5/LCD_ShiftReg.c ****         }
 342:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 343:Generated_Source\PSoC5/LCD_ShiftReg.c ****         return(result);
 344:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
 424              		.loc 1 344 0
 425 0016 10BD     		pop	{r4, pc}
 426              	.L51:
 427              		.align	2
 428              	.L50:
 429 0018 4B640040 		.word	1073767499
 430              		.cfi_endproc
 431              	.LFE10:
 432              		.size	LCD_ShiftReg_WriteData, .-LCD_ShiftReg_WriteData
 433              		.section	.text.LCD_ShiftReg_ReadRegValue,"ax",%progbits
 434              		.align	2
 435              		.global	LCD_ShiftReg_ReadRegValue
 436              		.thumb
 437              		.thumb_func
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 15


 438              		.type	LCD_ShiftReg_ReadRegValue, %function
 439              	LCD_ShiftReg_ReadRegValue:
 440              	.LFB11:
 345:Generated_Source\PSoC5/LCD_ShiftReg.c **** #endif /* (0u != LCD_ShiftReg_USE_INPUT_FIFO) */
 346:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 347:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 348:Generated_Source\PSoC5/LCD_ShiftReg.c **** #if(0u != LCD_ShiftReg_USE_OUTPUT_FIFO)
 349:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /*******************************************************************************
 350:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Function Name: LCD_ShiftReg_ReadData
 351:Generated_Source\PSoC5/LCD_ShiftReg.c ****     ********************************************************************************
 352:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 353:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Summary:
 354:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  Returns state in FIFO due to Store input.
 355:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 356:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Parameters:
 357:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  None.
 358:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 359:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Return:
 360:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  Shift Register state
 361:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 362:Generated_Source\PSoC5/LCD_ShiftReg.c ****     * Reentrant:
 363:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *  No.
 364:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *
 365:Generated_Source\PSoC5/LCD_ShiftReg.c ****     *******************************************************************************/
 366:Generated_Source\PSoC5/LCD_ShiftReg.c ****     uint8 LCD_ShiftReg_ReadData(void) 
 367:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
 368:Generated_Source\PSoC5/LCD_ShiftReg.c ****         return(CY_GET_REG8(LCD_ShiftReg_OUT_FIFO_VAL_LSB_PTR));
 369:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
 370:Generated_Source\PSoC5/LCD_ShiftReg.c **** #endif /* (0u != LCD_ShiftReg_USE_OUTPUT_FIFO) */
 371:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 372:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 373:Generated_Source\PSoC5/LCD_ShiftReg.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Function Name: LCD_ShiftReg_ReadRegValue
 375:Generated_Source\PSoC5/LCD_ShiftReg.c **** ********************************************************************************
 376:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 377:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Summary:
 378:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Directly returns current state in shift register, not data in FIFO due
 379:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  to Store input.
 380:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 381:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Parameters:
 382:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  None.
 383:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 384:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Return:
 385:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  Shift Register state. Clears output FIFO.
 386:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 387:Generated_Source\PSoC5/LCD_ShiftReg.c **** * Reentrant:
 388:Generated_Source\PSoC5/LCD_ShiftReg.c **** *  No.
 389:Generated_Source\PSoC5/LCD_ShiftReg.c **** *
 390:Generated_Source\PSoC5/LCD_ShiftReg.c **** *******************************************************************************/
 391:Generated_Source\PSoC5/LCD_ShiftReg.c **** uint8 LCD_ShiftReg_ReadRegValue(void) 
 392:Generated_Source\PSoC5/LCD_ShiftReg.c **** {
 441              		.loc 1 392 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 16


 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 393:Generated_Source\PSoC5/LCD_ShiftReg.c ****     uint8 result;
 394:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 395:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /* Clear FIFO before software capture */
 396:Generated_Source\PSoC5/LCD_ShiftReg.c ****     while(LCD_ShiftReg_RET_FIFO_EMPTY != LCD_ShiftReg_GetFIFOStatus(LCD_ShiftReg_OUT_FIFO))
 449              		.loc 1 396 0
 450 0002 01E0     		b	.L53
 451              	.L54:
 397:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
 398:Generated_Source\PSoC5/LCD_ShiftReg.c ****         (void) CY_GET_REG8(LCD_ShiftReg_OUT_FIFO_VAL_LSB_PTR);
 452              		.loc 1 398 0
 453 0004 054B     		ldr	r3, .L56
 454 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 455              	.L53:
 396:Generated_Source\PSoC5/LCD_ShiftReg.c ****     {
 456              		.loc 1 396 0
 457 0008 0220     		movs	r0, #2
 458 000a FFF7FEFF 		bl	LCD_ShiftReg_GetFIFOStatus
 459              	.LVL32:
 460 000e 0228     		cmp	r0, #2
 461 0010 F8D1     		bne	.L54
 399:Generated_Source\PSoC5/LCD_ShiftReg.c ****     }
 400:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 401:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /* Read of 8 bits from A1 causes capture to output FIFO */
 402:Generated_Source\PSoC5/LCD_ShiftReg.c ****     (void) CY_GET_REG8(LCD_ShiftReg_SHIFT_REG_CAPTURE_PTR);
 462              		.loc 1 402 0
 463 0012 034B     		ldr	r3, .L56+4
 464 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 403:Generated_Source\PSoC5/LCD_ShiftReg.c **** 
 404:Generated_Source\PSoC5/LCD_ShiftReg.c ****     /* Read output FIFO */
 405:Generated_Source\PSoC5/LCD_ShiftReg.c ****     result  = CY_GET_REG8(LCD_ShiftReg_OUT_FIFO_VAL_LSB_PTR);
 465              		.loc 1 405 0
 466 0016 014B     		ldr	r3, .L56
 467 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 468              	.LVL33:
 406:Generated_Source\PSoC5/LCD_ShiftReg.c ****     
 407:Generated_Source\PSoC5/LCD_ShiftReg.c ****     #if(0u != (LCD_ShiftReg_SR_SIZE % 8u))
 408:Generated_Source\PSoC5/LCD_ShiftReg.c ****         result &= ((uint8) LCD_ShiftReg_SR_MASK);
 409:Generated_Source\PSoC5/LCD_ShiftReg.c ****     #endif /* (0u != (LCD_ShiftReg_SR_SIZE % 8u)) */
 410:Generated_Source\PSoC5/LCD_ShiftReg.c ****     
 411:Generated_Source\PSoC5/LCD_ShiftReg.c ****     return(result);
 412:Generated_Source\PSoC5/LCD_ShiftReg.c **** }
 469              		.loc 1 412 0
 470 001a 08BD     		pop	{r3, pc}
 471              	.L57:
 472              		.align	2
 473              	.L56:
 474 001c 5B640040 		.word	1073767515
 475 0020 1B640040 		.word	1073767451
 476              		.cfi_endproc
 477              	.LFE11:
 478              		.size	LCD_ShiftReg_ReadRegValue, .-LCD_ShiftReg_ReadRegValue
 479              		.global	LCD_ShiftReg_initVar
 480              		.bss
 481              		.set	.LANCHOR0,. + 0
 482              		.type	LCD_ShiftReg_initVar, %object
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 17


 483              		.size	LCD_ShiftReg_initVar, 1
 484              	LCD_ShiftReg_initVar:
 485 0000 00       		.space	1
 486              		.text
 487              	.Letext0:
 488              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 489              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 490              		.section	.debug_info,"",%progbits
 491              	.Ldebug_info0:
 492 0000 F0020000 		.4byte	0x2f0
 493 0004 0400     		.2byte	0x4
 494 0006 00000000 		.4byte	.Ldebug_abbrev0
 495 000a 04       		.byte	0x4
 496 000b 01       		.uleb128 0x1
 497 000c EB000000 		.4byte	.LASF35
 498 0010 0C       		.byte	0xc
 499 0011 1F020000 		.4byte	.LASF36
 500 0015 A5010000 		.4byte	.LASF37
 501 0019 00000000 		.4byte	.Ldebug_ranges0+0
 502 001d 00000000 		.4byte	0
 503 0021 00000000 		.4byte	.Ldebug_line0
 504 0025 02       		.uleb128 0x2
 505 0026 01       		.byte	0x1
 506 0027 06       		.byte	0x6
 507 0028 4C030000 		.4byte	.LASF0
 508 002c 02       		.uleb128 0x2
 509 002d 01       		.byte	0x1
 510 002e 08       		.byte	0x8
 511 002f DD000000 		.4byte	.LASF1
 512 0033 02       		.uleb128 0x2
 513 0034 02       		.byte	0x2
 514 0035 05       		.byte	0x5
 515 0036 1B030000 		.4byte	.LASF2
 516 003a 02       		.uleb128 0x2
 517 003b 02       		.byte	0x2
 518 003c 07       		.byte	0x7
 519 003d 52000000 		.4byte	.LASF3
 520 0041 02       		.uleb128 0x2
 521 0042 04       		.byte	0x4
 522 0043 05       		.byte	0x5
 523 0044 25030000 		.4byte	.LASF4
 524 0048 02       		.uleb128 0x2
 525 0049 04       		.byte	0x4
 526 004a 07       		.byte	0x7
 527 004b 8D010000 		.4byte	.LASF5
 528 004f 02       		.uleb128 0x2
 529 0050 08       		.byte	0x8
 530 0051 05       		.byte	0x5
 531 0052 DD020000 		.4byte	.LASF6
 532 0056 02       		.uleb128 0x2
 533 0057 08       		.byte	0x8
 534 0058 07       		.byte	0x7
 535 0059 C6000000 		.4byte	.LASF7
 536 005d 03       		.uleb128 0x3
 537 005e 04       		.byte	0x4
 538 005f 05       		.byte	0x5
 539 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 18


 540 0064 02       		.uleb128 0x2
 541 0065 04       		.byte	0x4
 542 0066 07       		.byte	0x7
 543 0067 88020000 		.4byte	.LASF8
 544 006b 04       		.uleb128 0x4
 545 006c 9F010000 		.4byte	.LASF12
 546 0070 02       		.byte	0x2
 547 0071 9201     		.2byte	0x192
 548 0073 2C000000 		.4byte	0x2c
 549 0077 02       		.uleb128 0x2
 550 0078 04       		.byte	0x4
 551 0079 04       		.byte	0x4
 552 007a A9000000 		.4byte	.LASF9
 553 007e 02       		.uleb128 0x2
 554 007f 08       		.byte	0x8
 555 0080 04       		.byte	0x4
 556 0081 18020000 		.4byte	.LASF10
 557 0085 02       		.uleb128 0x2
 558 0086 01       		.byte	0x1
 559 0087 08       		.byte	0x8
 560 0088 FB020000 		.4byte	.LASF11
 561 008c 04       		.uleb128 0x4
 562 008d 00000000 		.4byte	.LASF13
 563 0091 02       		.byte	0x2
 564 0092 3402     		.2byte	0x234
 565 0094 48000000 		.4byte	0x48
 566 0098 04       		.uleb128 0x4
 567 0099 79010000 		.4byte	.LASF14
 568 009d 02       		.byte	0x2
 569 009e 3C02     		.2byte	0x23c
 570 00a0 A4000000 		.4byte	0xa4
 571 00a4 05       		.uleb128 0x5
 572 00a5 6B000000 		.4byte	0x6b
 573 00a9 02       		.uleb128 0x2
 574 00aa 08       		.byte	0x8
 575 00ab 04       		.byte	0x4
 576 00ac 40030000 		.4byte	.LASF15
 577 00b0 02       		.uleb128 0x2
 578 00b1 04       		.byte	0x4
 579 00b2 07       		.byte	0x7
 580 00b3 D4020000 		.4byte	.LASF16
 581 00b7 06       		.uleb128 0x6
 582 00b8 AF000000 		.4byte	.LASF17
 583 00bc 01       		.byte	0x1
 584 00bd 87       		.byte	0x87
 585 00be 00000000 		.4byte	.LFB4
 586 00c2 1C000000 		.4byte	.LFE4-.LFB4
 587 00c6 01       		.uleb128 0x1
 588 00c7 9C       		.byte	0x9c
 589 00c8 EE000000 		.4byte	0xee
 590 00cc 07       		.uleb128 0x7
 591 00cd 7E010000 		.4byte	.LASF20
 592 00d1 01       		.byte	0x1
 593 00d2 89       		.byte	0x89
 594 00d3 6B000000 		.4byte	0x6b
 595 00d7 00000000 		.4byte	.LLST0
 596 00db 08       		.uleb128 0x8
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 19


 597 00dc 06000000 		.4byte	.LVL0
 598 00e0 DD020000 		.4byte	0x2dd
 599 00e4 08       		.uleb128 0x8
 600 00e5 14000000 		.4byte	.LVL1
 601 00e9 E8020000 		.4byte	0x2e8
 602 00ed 00       		.byte	0
 603 00ee 06       		.uleb128 0x6
 604 00ef 3E000000 		.4byte	.LASF18
 605 00f3 01       		.byte	0x1
 606 00f4 45       		.byte	0x45
 607 00f5 00000000 		.4byte	.LFB1
 608 00f9 18000000 		.4byte	.LFE1-.LFB1
 609 00fd 01       		.uleb128 0x1
 610 00fe 9C       		.byte	0x9c
 611 00ff 0D010000 		.4byte	0x10d
 612 0103 08       		.uleb128 0x8
 613 0104 10000000 		.4byte	.LVL2
 614 0108 B7000000 		.4byte	0xb7
 615 010c 00       		.byte	0
 616 010d 06       		.uleb128 0x6
 617 010e 91000000 		.4byte	.LASF19
 618 0112 01       		.byte	0x1
 619 0113 9F       		.byte	0x9f
 620 0114 00000000 		.4byte	.LFB5
 621 0118 1C000000 		.4byte	.LFE5-.LFB5
 622 011c 01       		.uleb128 0x1
 623 011d 9C       		.byte	0x9c
 624 011e 44010000 		.4byte	0x144
 625 0122 07       		.uleb128 0x7
 626 0123 7E010000 		.4byte	.LASF20
 627 0127 01       		.byte	0x1
 628 0128 A1       		.byte	0xa1
 629 0129 6B000000 		.4byte	0x6b
 630 012d 13000000 		.4byte	.LLST1
 631 0131 08       		.uleb128 0x8
 632 0132 06000000 		.4byte	.LVL3
 633 0136 DD020000 		.4byte	0x2dd
 634 013a 08       		.uleb128 0x8
 635 013b 14000000 		.4byte	.LVL4
 636 013f E8020000 		.4byte	0x2e8
 637 0143 00       		.byte	0
 638 0144 06       		.uleb128 0x6
 639 0145 2E030000 		.4byte	.LASF21
 640 0149 01       		.byte	0x1
 641 014a 71       		.byte	0x71
 642 014b 00000000 		.4byte	.LFB3
 643 014f 18000000 		.4byte	.LFE3-.LFB3
 644 0153 01       		.uleb128 0x1
 645 0154 9C       		.byte	0x9c
 646 0155 63010000 		.4byte	0x163
 647 0159 08       		.uleb128 0x8
 648 015a 10000000 		.4byte	.LVL5
 649 015e 0D010000 		.4byte	0x10d
 650 0162 00       		.byte	0
 651 0163 09       		.uleb128 0x9
 652 0164 00030000 		.4byte	.LASF30
 653 0168 01       		.byte	0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 20


 654 0169 B7       		.byte	0xb7
 655 016a 6B000000 		.4byte	0x6b
 656 016e 00000000 		.4byte	.LFB6
 657 0172 48000000 		.4byte	.LFE6-.LFB6
 658 0176 01       		.uleb128 0x1
 659 0177 9C       		.byte	0x9c
 660 0178 9B010000 		.4byte	0x19b
 661 017c 0A       		.uleb128 0xa
 662 017d 11020000 		.4byte	.LASF24
 663 0181 01       		.byte	0x1
 664 0182 B7       		.byte	0xb7
 665 0183 6B000000 		.4byte	0x6b
 666 0187 26000000 		.4byte	.LLST2
 667 018b 07       		.uleb128 0x7
 668 018c B5020000 		.4byte	.LASF22
 669 0190 01       		.byte	0x1
 670 0191 B9       		.byte	0xb9
 671 0192 6B000000 		.4byte	0x6b
 672 0196 92000000 		.4byte	.LLST3
 673 019a 00       		.byte	0
 674 019b 0B       		.uleb128 0xb
 675 019c BC020000 		.4byte	.LASF23
 676 01a0 01       		.byte	0x1
 677 01a1 0501     		.2byte	0x105
 678 01a3 00000000 		.4byte	.LFB7
 679 01a7 1C000000 		.4byte	.LFE7-.LFB7
 680 01ab 01       		.uleb128 0x1
 681 01ac 9C       		.byte	0x9c
 682 01ad C2010000 		.4byte	0x1c2
 683 01b1 0C       		.uleb128 0xc
 684 01b2 EB020000 		.4byte	.LASF25
 685 01b6 01       		.byte	0x1
 686 01b7 0501     		.2byte	0x105
 687 01b9 6B000000 		.4byte	0x6b
 688 01bd E2000000 		.4byte	.LLST4
 689 01c1 00       		.byte	0
 690 01c2 06       		.uleb128 0x6
 691 01c3 7F000000 		.4byte	.LASF26
 692 01c7 01       		.byte	0x1
 693 01c8 5D       		.byte	0x5d
 694 01c9 00000000 		.4byte	.LFB2
 695 01cd 0A000000 		.4byte	.LFE2-.LFB2
 696 01d1 01       		.uleb128 0x1
 697 01d2 9C       		.byte	0x9c
 698 01d3 E7010000 		.4byte	0x1e7
 699 01d7 0D       		.uleb128 0xd
 700 01d8 08000000 		.4byte	.LVL21
 701 01dc 9B010000 		.4byte	0x19b
 702 01e0 0E       		.uleb128 0xe
 703 01e1 01       		.uleb128 0x1
 704 01e2 50       		.byte	0x50
 705 01e3 01       		.uleb128 0x1
 706 01e4 30       		.byte	0x30
 707 01e5 00       		.byte	0
 708 01e6 00       		.byte	0
 709 01e7 06       		.uleb128 0x6
 710 01e8 58030000 		.4byte	.LASF27
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 21


 711 01ec 01       		.byte	0x1
 712 01ed 2B       		.byte	0x2b
 713 01ee 00000000 		.4byte	.LFB0
 714 01f2 1C000000 		.4byte	.LFE0-.LFB0
 715 01f6 01       		.uleb128 0x1
 716 01f7 9C       		.byte	0x9c
 717 01f8 0F020000 		.4byte	0x20f
 718 01fc 08       		.uleb128 0x8
 719 01fd 0C000000 		.4byte	.LVL22
 720 0201 C2010000 		.4byte	0x1c2
 721 0205 08       		.uleb128 0x8
 722 0206 16000000 		.4byte	.LVL23
 723 020a EE000000 		.4byte	0xee
 724 020e 00       		.byte	0
 725 020f 0F       		.uleb128 0xf
 726 0210 24000000 		.4byte	.LASF38
 727 0214 01       		.byte	0x1
 728 0215 1A01     		.2byte	0x11a
 729 0217 6B000000 		.4byte	0x6b
 730 021b 00000000 		.4byte	.LFB8
 731 021f 10000000 		.4byte	.LFE8-.LFB8
 732 0223 01       		.uleb128 0x1
 733 0224 9C       		.byte	0x9c
 734 0225 0B       		.uleb128 0xb
 735 0226 09000000 		.4byte	.LASF28
 736 022a 01       		.byte	0x1
 737 022b 2E01     		.2byte	0x12e
 738 022d 00000000 		.4byte	.LFB9
 739 0231 0C000000 		.4byte	.LFE9-.LFB9
 740 0235 01       		.uleb128 0x1
 741 0236 9C       		.byte	0x9c
 742 0237 4A020000 		.4byte	0x24a
 743 023b 10       		.uleb128 0x10
 744 023c 95020000 		.4byte	.LASF29
 745 0240 01       		.byte	0x1
 746 0241 2E01     		.2byte	0x12e
 747 0243 6B000000 		.4byte	0x6b
 748 0247 01       		.uleb128 0x1
 749 0248 50       		.byte	0x50
 750 0249 00       		.byte	0
 751 024a 11       		.uleb128 0x11
 752 024b 45020000 		.4byte	.LASF31
 753 024f 01       		.byte	0x1
 754 0250 4901     		.2byte	0x149
 755 0252 8C000000 		.4byte	0x8c
 756 0256 00000000 		.4byte	.LFB10
 757 025a 1C000000 		.4byte	.LFE10-.LFB10
 758 025e 01       		.uleb128 0x1
 759 025f 9C       		.byte	0x9c
 760 0260 94020000 		.4byte	0x294
 761 0264 0C       		.uleb128 0xc
 762 0265 95020000 		.4byte	.LASF29
 763 0269 01       		.byte	0x1
 764 026a 4901     		.2byte	0x149
 765 026c 6B000000 		.4byte	0x6b
 766 0270 03010000 		.4byte	.LLST5
 767 0274 12       		.uleb128 0x12
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 22


 768 0275 B5020000 		.4byte	.LASF22
 769 0279 01       		.byte	0x1
 770 027a 4C01     		.2byte	0x14c
 771 027c 8C000000 		.4byte	0x8c
 772 0280 24010000 		.4byte	.LLST6
 773 0284 0D       		.uleb128 0xd
 774 0285 0A000000 		.4byte	.LVL28
 775 0289 63010000 		.4byte	0x163
 776 028d 0E       		.uleb128 0xe
 777 028e 01       		.uleb128 0x1
 778 028f 50       		.byte	0x50
 779 0290 01       		.uleb128 0x1
 780 0291 31       		.byte	0x31
 781 0292 00       		.byte	0
 782 0293 00       		.byte	0
 783 0294 11       		.uleb128 0x11
 784 0295 65000000 		.4byte	.LASF32
 785 0299 01       		.byte	0x1
 786 029a 8701     		.2byte	0x187
 787 029c 6B000000 		.4byte	0x6b
 788 02a0 00000000 		.4byte	.LFB11
 789 02a4 24000000 		.4byte	.LFE11-.LFB11
 790 02a8 01       		.uleb128 0x1
 791 02a9 9C       		.byte	0x9c
 792 02aa CC020000 		.4byte	0x2cc
 793 02ae 13       		.uleb128 0x13
 794 02af B5020000 		.4byte	.LASF22
 795 02b3 01       		.byte	0x1
 796 02b4 8901     		.2byte	0x189
 797 02b6 6B000000 		.4byte	0x6b
 798 02ba 01       		.uleb128 0x1
 799 02bb 50       		.byte	0x50
 800 02bc 0D       		.uleb128 0xd
 801 02bd 0E000000 		.4byte	.LVL32
 802 02c1 63010000 		.4byte	0x163
 803 02c5 0E       		.uleb128 0xe
 804 02c6 01       		.uleb128 0x1
 805 02c7 50       		.byte	0x50
 806 02c8 01       		.uleb128 0x1
 807 02c9 32       		.byte	0x32
 808 02ca 00       		.byte	0
 809 02cb 00       		.byte	0
 810 02cc 14       		.uleb128 0x14
 811 02cd 5C020000 		.4byte	.LASF39
 812 02d1 01       		.byte	0x1
 813 02d2 13       		.byte	0x13
 814 02d3 6B000000 		.4byte	0x6b
 815 02d7 05       		.uleb128 0x5
 816 02d8 03       		.byte	0x3
 817 02d9 00000000 		.4byte	LCD_ShiftReg_initVar
 818 02dd 15       		.uleb128 0x15
 819 02de 71020000 		.4byte	.LASF33
 820 02e2 71020000 		.4byte	.LASF33
 821 02e6 03       		.byte	0x3
 822 02e7 7D       		.byte	0x7d
 823 02e8 15       		.uleb128 0x15
 824 02e9 9F020000 		.4byte	.LASF34
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 23


 825 02ed 9F020000 		.4byte	.LASF34
 826 02f1 03       		.byte	0x3
 827 02f2 7E       		.byte	0x7e
 828 02f3 00       		.byte	0
 829              		.section	.debug_abbrev,"",%progbits
 830              	.Ldebug_abbrev0:
 831 0000 01       		.uleb128 0x1
 832 0001 11       		.uleb128 0x11
 833 0002 01       		.byte	0x1
 834 0003 25       		.uleb128 0x25
 835 0004 0E       		.uleb128 0xe
 836 0005 13       		.uleb128 0x13
 837 0006 0B       		.uleb128 0xb
 838 0007 03       		.uleb128 0x3
 839 0008 0E       		.uleb128 0xe
 840 0009 1B       		.uleb128 0x1b
 841 000a 0E       		.uleb128 0xe
 842 000b 55       		.uleb128 0x55
 843 000c 17       		.uleb128 0x17
 844 000d 11       		.uleb128 0x11
 845 000e 01       		.uleb128 0x1
 846 000f 10       		.uleb128 0x10
 847 0010 17       		.uleb128 0x17
 848 0011 00       		.byte	0
 849 0012 00       		.byte	0
 850 0013 02       		.uleb128 0x2
 851 0014 24       		.uleb128 0x24
 852 0015 00       		.byte	0
 853 0016 0B       		.uleb128 0xb
 854 0017 0B       		.uleb128 0xb
 855 0018 3E       		.uleb128 0x3e
 856 0019 0B       		.uleb128 0xb
 857 001a 03       		.uleb128 0x3
 858 001b 0E       		.uleb128 0xe
 859 001c 00       		.byte	0
 860 001d 00       		.byte	0
 861 001e 03       		.uleb128 0x3
 862 001f 24       		.uleb128 0x24
 863 0020 00       		.byte	0
 864 0021 0B       		.uleb128 0xb
 865 0022 0B       		.uleb128 0xb
 866 0023 3E       		.uleb128 0x3e
 867 0024 0B       		.uleb128 0xb
 868 0025 03       		.uleb128 0x3
 869 0026 08       		.uleb128 0x8
 870 0027 00       		.byte	0
 871 0028 00       		.byte	0
 872 0029 04       		.uleb128 0x4
 873 002a 16       		.uleb128 0x16
 874 002b 00       		.byte	0
 875 002c 03       		.uleb128 0x3
 876 002d 0E       		.uleb128 0xe
 877 002e 3A       		.uleb128 0x3a
 878 002f 0B       		.uleb128 0xb
 879 0030 3B       		.uleb128 0x3b
 880 0031 05       		.uleb128 0x5
 881 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 24


 882 0033 13       		.uleb128 0x13
 883 0034 00       		.byte	0
 884 0035 00       		.byte	0
 885 0036 05       		.uleb128 0x5
 886 0037 35       		.uleb128 0x35
 887 0038 00       		.byte	0
 888 0039 49       		.uleb128 0x49
 889 003a 13       		.uleb128 0x13
 890 003b 00       		.byte	0
 891 003c 00       		.byte	0
 892 003d 06       		.uleb128 0x6
 893 003e 2E       		.uleb128 0x2e
 894 003f 01       		.byte	0x1
 895 0040 3F       		.uleb128 0x3f
 896 0041 19       		.uleb128 0x19
 897 0042 03       		.uleb128 0x3
 898 0043 0E       		.uleb128 0xe
 899 0044 3A       		.uleb128 0x3a
 900 0045 0B       		.uleb128 0xb
 901 0046 3B       		.uleb128 0x3b
 902 0047 0B       		.uleb128 0xb
 903 0048 27       		.uleb128 0x27
 904 0049 19       		.uleb128 0x19
 905 004a 11       		.uleb128 0x11
 906 004b 01       		.uleb128 0x1
 907 004c 12       		.uleb128 0x12
 908 004d 06       		.uleb128 0x6
 909 004e 40       		.uleb128 0x40
 910 004f 18       		.uleb128 0x18
 911 0050 9742     		.uleb128 0x2117
 912 0052 19       		.uleb128 0x19
 913 0053 01       		.uleb128 0x1
 914 0054 13       		.uleb128 0x13
 915 0055 00       		.byte	0
 916 0056 00       		.byte	0
 917 0057 07       		.uleb128 0x7
 918 0058 34       		.uleb128 0x34
 919 0059 00       		.byte	0
 920 005a 03       		.uleb128 0x3
 921 005b 0E       		.uleb128 0xe
 922 005c 3A       		.uleb128 0x3a
 923 005d 0B       		.uleb128 0xb
 924 005e 3B       		.uleb128 0x3b
 925 005f 0B       		.uleb128 0xb
 926 0060 49       		.uleb128 0x49
 927 0061 13       		.uleb128 0x13
 928 0062 02       		.uleb128 0x2
 929 0063 17       		.uleb128 0x17
 930 0064 00       		.byte	0
 931 0065 00       		.byte	0
 932 0066 08       		.uleb128 0x8
 933 0067 898201   		.uleb128 0x4109
 934 006a 00       		.byte	0
 935 006b 11       		.uleb128 0x11
 936 006c 01       		.uleb128 0x1
 937 006d 31       		.uleb128 0x31
 938 006e 13       		.uleb128 0x13
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 25


 939 006f 00       		.byte	0
 940 0070 00       		.byte	0
 941 0071 09       		.uleb128 0x9
 942 0072 2E       		.uleb128 0x2e
 943 0073 01       		.byte	0x1
 944 0074 3F       		.uleb128 0x3f
 945 0075 19       		.uleb128 0x19
 946 0076 03       		.uleb128 0x3
 947 0077 0E       		.uleb128 0xe
 948 0078 3A       		.uleb128 0x3a
 949 0079 0B       		.uleb128 0xb
 950 007a 3B       		.uleb128 0x3b
 951 007b 0B       		.uleb128 0xb
 952 007c 27       		.uleb128 0x27
 953 007d 19       		.uleb128 0x19
 954 007e 49       		.uleb128 0x49
 955 007f 13       		.uleb128 0x13
 956 0080 11       		.uleb128 0x11
 957 0081 01       		.uleb128 0x1
 958 0082 12       		.uleb128 0x12
 959 0083 06       		.uleb128 0x6
 960 0084 40       		.uleb128 0x40
 961 0085 18       		.uleb128 0x18
 962 0086 9742     		.uleb128 0x2117
 963 0088 19       		.uleb128 0x19
 964 0089 01       		.uleb128 0x1
 965 008a 13       		.uleb128 0x13
 966 008b 00       		.byte	0
 967 008c 00       		.byte	0
 968 008d 0A       		.uleb128 0xa
 969 008e 05       		.uleb128 0x5
 970 008f 00       		.byte	0
 971 0090 03       		.uleb128 0x3
 972 0091 0E       		.uleb128 0xe
 973 0092 3A       		.uleb128 0x3a
 974 0093 0B       		.uleb128 0xb
 975 0094 3B       		.uleb128 0x3b
 976 0095 0B       		.uleb128 0xb
 977 0096 49       		.uleb128 0x49
 978 0097 13       		.uleb128 0x13
 979 0098 02       		.uleb128 0x2
 980 0099 17       		.uleb128 0x17
 981 009a 00       		.byte	0
 982 009b 00       		.byte	0
 983 009c 0B       		.uleb128 0xb
 984 009d 2E       		.uleb128 0x2e
 985 009e 01       		.byte	0x1
 986 009f 3F       		.uleb128 0x3f
 987 00a0 19       		.uleb128 0x19
 988 00a1 03       		.uleb128 0x3
 989 00a2 0E       		.uleb128 0xe
 990 00a3 3A       		.uleb128 0x3a
 991 00a4 0B       		.uleb128 0xb
 992 00a5 3B       		.uleb128 0x3b
 993 00a6 05       		.uleb128 0x5
 994 00a7 27       		.uleb128 0x27
 995 00a8 19       		.uleb128 0x19
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 26


 996 00a9 11       		.uleb128 0x11
 997 00aa 01       		.uleb128 0x1
 998 00ab 12       		.uleb128 0x12
 999 00ac 06       		.uleb128 0x6
 1000 00ad 40       		.uleb128 0x40
 1001 00ae 18       		.uleb128 0x18
 1002 00af 9742     		.uleb128 0x2117
 1003 00b1 19       		.uleb128 0x19
 1004 00b2 01       		.uleb128 0x1
 1005 00b3 13       		.uleb128 0x13
 1006 00b4 00       		.byte	0
 1007 00b5 00       		.byte	0
 1008 00b6 0C       		.uleb128 0xc
 1009 00b7 05       		.uleb128 0x5
 1010 00b8 00       		.byte	0
 1011 00b9 03       		.uleb128 0x3
 1012 00ba 0E       		.uleb128 0xe
 1013 00bb 3A       		.uleb128 0x3a
 1014 00bc 0B       		.uleb128 0xb
 1015 00bd 3B       		.uleb128 0x3b
 1016 00be 05       		.uleb128 0x5
 1017 00bf 49       		.uleb128 0x49
 1018 00c0 13       		.uleb128 0x13
 1019 00c1 02       		.uleb128 0x2
 1020 00c2 17       		.uleb128 0x17
 1021 00c3 00       		.byte	0
 1022 00c4 00       		.byte	0
 1023 00c5 0D       		.uleb128 0xd
 1024 00c6 898201   		.uleb128 0x4109
 1025 00c9 01       		.byte	0x1
 1026 00ca 11       		.uleb128 0x11
 1027 00cb 01       		.uleb128 0x1
 1028 00cc 31       		.uleb128 0x31
 1029 00cd 13       		.uleb128 0x13
 1030 00ce 00       		.byte	0
 1031 00cf 00       		.byte	0
 1032 00d0 0E       		.uleb128 0xe
 1033 00d1 8A8201   		.uleb128 0x410a
 1034 00d4 00       		.byte	0
 1035 00d5 02       		.uleb128 0x2
 1036 00d6 18       		.uleb128 0x18
 1037 00d7 9142     		.uleb128 0x2111
 1038 00d9 18       		.uleb128 0x18
 1039 00da 00       		.byte	0
 1040 00db 00       		.byte	0
 1041 00dc 0F       		.uleb128 0xf
 1042 00dd 2E       		.uleb128 0x2e
 1043 00de 00       		.byte	0
 1044 00df 3F       		.uleb128 0x3f
 1045 00e0 19       		.uleb128 0x19
 1046 00e1 03       		.uleb128 0x3
 1047 00e2 0E       		.uleb128 0xe
 1048 00e3 3A       		.uleb128 0x3a
 1049 00e4 0B       		.uleb128 0xb
 1050 00e5 3B       		.uleb128 0x3b
 1051 00e6 05       		.uleb128 0x5
 1052 00e7 27       		.uleb128 0x27
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 27


 1053 00e8 19       		.uleb128 0x19
 1054 00e9 49       		.uleb128 0x49
 1055 00ea 13       		.uleb128 0x13
 1056 00eb 11       		.uleb128 0x11
 1057 00ec 01       		.uleb128 0x1
 1058 00ed 12       		.uleb128 0x12
 1059 00ee 06       		.uleb128 0x6
 1060 00ef 40       		.uleb128 0x40
 1061 00f0 18       		.uleb128 0x18
 1062 00f1 9742     		.uleb128 0x2117
 1063 00f3 19       		.uleb128 0x19
 1064 00f4 00       		.byte	0
 1065 00f5 00       		.byte	0
 1066 00f6 10       		.uleb128 0x10
 1067 00f7 05       		.uleb128 0x5
 1068 00f8 00       		.byte	0
 1069 00f9 03       		.uleb128 0x3
 1070 00fa 0E       		.uleb128 0xe
 1071 00fb 3A       		.uleb128 0x3a
 1072 00fc 0B       		.uleb128 0xb
 1073 00fd 3B       		.uleb128 0x3b
 1074 00fe 05       		.uleb128 0x5
 1075 00ff 49       		.uleb128 0x49
 1076 0100 13       		.uleb128 0x13
 1077 0101 02       		.uleb128 0x2
 1078 0102 18       		.uleb128 0x18
 1079 0103 00       		.byte	0
 1080 0104 00       		.byte	0
 1081 0105 11       		.uleb128 0x11
 1082 0106 2E       		.uleb128 0x2e
 1083 0107 01       		.byte	0x1
 1084 0108 3F       		.uleb128 0x3f
 1085 0109 19       		.uleb128 0x19
 1086 010a 03       		.uleb128 0x3
 1087 010b 0E       		.uleb128 0xe
 1088 010c 3A       		.uleb128 0x3a
 1089 010d 0B       		.uleb128 0xb
 1090 010e 3B       		.uleb128 0x3b
 1091 010f 05       		.uleb128 0x5
 1092 0110 27       		.uleb128 0x27
 1093 0111 19       		.uleb128 0x19
 1094 0112 49       		.uleb128 0x49
 1095 0113 13       		.uleb128 0x13
 1096 0114 11       		.uleb128 0x11
 1097 0115 01       		.uleb128 0x1
 1098 0116 12       		.uleb128 0x12
 1099 0117 06       		.uleb128 0x6
 1100 0118 40       		.uleb128 0x40
 1101 0119 18       		.uleb128 0x18
 1102 011a 9742     		.uleb128 0x2117
 1103 011c 19       		.uleb128 0x19
 1104 011d 01       		.uleb128 0x1
 1105 011e 13       		.uleb128 0x13
 1106 011f 00       		.byte	0
 1107 0120 00       		.byte	0
 1108 0121 12       		.uleb128 0x12
 1109 0122 34       		.uleb128 0x34
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 28


 1110 0123 00       		.byte	0
 1111 0124 03       		.uleb128 0x3
 1112 0125 0E       		.uleb128 0xe
 1113 0126 3A       		.uleb128 0x3a
 1114 0127 0B       		.uleb128 0xb
 1115 0128 3B       		.uleb128 0x3b
 1116 0129 05       		.uleb128 0x5
 1117 012a 49       		.uleb128 0x49
 1118 012b 13       		.uleb128 0x13
 1119 012c 02       		.uleb128 0x2
 1120 012d 17       		.uleb128 0x17
 1121 012e 00       		.byte	0
 1122 012f 00       		.byte	0
 1123 0130 13       		.uleb128 0x13
 1124 0131 34       		.uleb128 0x34
 1125 0132 00       		.byte	0
 1126 0133 03       		.uleb128 0x3
 1127 0134 0E       		.uleb128 0xe
 1128 0135 3A       		.uleb128 0x3a
 1129 0136 0B       		.uleb128 0xb
 1130 0137 3B       		.uleb128 0x3b
 1131 0138 05       		.uleb128 0x5
 1132 0139 49       		.uleb128 0x49
 1133 013a 13       		.uleb128 0x13
 1134 013b 02       		.uleb128 0x2
 1135 013c 18       		.uleb128 0x18
 1136 013d 00       		.byte	0
 1137 013e 00       		.byte	0
 1138 013f 14       		.uleb128 0x14
 1139 0140 34       		.uleb128 0x34
 1140 0141 00       		.byte	0
 1141 0142 03       		.uleb128 0x3
 1142 0143 0E       		.uleb128 0xe
 1143 0144 3A       		.uleb128 0x3a
 1144 0145 0B       		.uleb128 0xb
 1145 0146 3B       		.uleb128 0x3b
 1146 0147 0B       		.uleb128 0xb
 1147 0148 49       		.uleb128 0x49
 1148 0149 13       		.uleb128 0x13
 1149 014a 3F       		.uleb128 0x3f
 1150 014b 19       		.uleb128 0x19
 1151 014c 02       		.uleb128 0x2
 1152 014d 18       		.uleb128 0x18
 1153 014e 00       		.byte	0
 1154 014f 00       		.byte	0
 1155 0150 15       		.uleb128 0x15
 1156 0151 2E       		.uleb128 0x2e
 1157 0152 00       		.byte	0
 1158 0153 3F       		.uleb128 0x3f
 1159 0154 19       		.uleb128 0x19
 1160 0155 3C       		.uleb128 0x3c
 1161 0156 19       		.uleb128 0x19
 1162 0157 6E       		.uleb128 0x6e
 1163 0158 0E       		.uleb128 0xe
 1164 0159 03       		.uleb128 0x3
 1165 015a 0E       		.uleb128 0xe
 1166 015b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 29


 1167 015c 0B       		.uleb128 0xb
 1168 015d 3B       		.uleb128 0x3b
 1169 015e 0B       		.uleb128 0xb
 1170 015f 00       		.byte	0
 1171 0160 00       		.byte	0
 1172 0161 00       		.byte	0
 1173              		.section	.debug_loc,"",%progbits
 1174              	.Ldebug_loc0:
 1175              	.LLST0:
 1176 0000 06000000 		.4byte	.LVL0
 1177 0004 13000000 		.4byte	.LVL1-1
 1178 0008 0100     		.2byte	0x1
 1179 000a 50       		.byte	0x50
 1180 000b 00000000 		.4byte	0
 1181 000f 00000000 		.4byte	0
 1182              	.LLST1:
 1183 0013 06000000 		.4byte	.LVL3
 1184 0017 13000000 		.4byte	.LVL4-1
 1185 001b 0100     		.2byte	0x1
 1186 001d 50       		.byte	0x50
 1187 001e 00000000 		.4byte	0
 1188 0022 00000000 		.4byte	0
 1189              	.LLST2:
 1190 0026 00000000 		.4byte	.LVL6
 1191 002a 18000000 		.4byte	.LVL8
 1192 002e 0100     		.2byte	0x1
 1193 0030 50       		.byte	0x50
 1194 0031 18000000 		.4byte	.LVL8
 1195 0035 1A000000 		.4byte	.LVL9
 1196 0039 0400     		.2byte	0x4
 1197 003b F3       		.byte	0xf3
 1198 003c 01       		.uleb128 0x1
 1199 003d 50       		.byte	0x50
 1200 003e 9F       		.byte	0x9f
 1201 003f 1A000000 		.4byte	.LVL9
 1202 0043 1C000000 		.4byte	.LVL10
 1203 0047 0100     		.2byte	0x1
 1204 0049 50       		.byte	0x50
 1205 004a 1C000000 		.4byte	.LVL10
 1206 004e 1E000000 		.4byte	.LVL11
 1207 0052 0400     		.2byte	0x4
 1208 0054 F3       		.byte	0xf3
 1209 0055 01       		.uleb128 0x1
 1210 0056 50       		.byte	0x50
 1211 0057 9F       		.byte	0x9f
 1212 0058 1E000000 		.4byte	.LVL11
 1213 005c 20000000 		.4byte	.LVL12
 1214 0060 0100     		.2byte	0x1
 1215 0062 50       		.byte	0x50
 1216 0063 20000000 		.4byte	.LVL12
 1217 0067 22000000 		.4byte	.LVL13
 1218 006b 0400     		.2byte	0x4
 1219 006d F3       		.byte	0xf3
 1220 006e 01       		.uleb128 0x1
 1221 006f 50       		.byte	0x50
 1222 0070 9F       		.byte	0x9f
 1223 0071 22000000 		.4byte	.LVL13
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 30


 1224 0075 24000000 		.4byte	.LVL14
 1225 0079 0100     		.2byte	0x1
 1226 007b 50       		.byte	0x50
 1227 007c 24000000 		.4byte	.LVL14
 1228 0080 48000000 		.4byte	.LFE6
 1229 0084 0400     		.2byte	0x4
 1230 0086 F3       		.byte	0xf3
 1231 0087 01       		.uleb128 0x1
 1232 0088 50       		.byte	0x50
 1233 0089 9F       		.byte	0x9f
 1234 008a 00000000 		.4byte	0
 1235 008e 00000000 		.4byte	0
 1236              	.LLST3:
 1237 0092 02000000 		.4byte	.LVL7
 1238 0096 1A000000 		.4byte	.LVL9
 1239 009a 0300     		.2byte	0x3
 1240 009c 09       		.byte	0x9
 1241 009d FE       		.byte	0xfe
 1242 009e 9F       		.byte	0x9f
 1243 009f 1A000000 		.4byte	.LVL9
 1244 00a3 1E000000 		.4byte	.LVL11
 1245 00a7 0200     		.2byte	0x2
 1246 00a9 31       		.byte	0x31
 1247 00aa 9F       		.byte	0x9f
 1248 00ab 1E000000 		.4byte	.LVL11
 1249 00af 24000000 		.4byte	.LVL14
 1250 00b3 0300     		.2byte	0x3
 1251 00b5 09       		.byte	0x9
 1252 00b6 FE       		.byte	0xfe
 1253 00b7 9F       		.byte	0x9f
 1254 00b8 24000000 		.4byte	.LVL14
 1255 00bc 38000000 		.4byte	.LVL15
 1256 00c0 0100     		.2byte	0x1
 1257 00c2 50       		.byte	0x50
 1258 00c3 3A000000 		.4byte	.LVL16
 1259 00c7 3E000000 		.4byte	.LVL17
 1260 00cb 0200     		.2byte	0x2
 1261 00cd 31       		.byte	0x31
 1262 00ce 9F       		.byte	0x9f
 1263 00cf 3E000000 		.4byte	.LVL17
 1264 00d3 48000000 		.4byte	.LFE6
 1265 00d7 0100     		.2byte	0x1
 1266 00d9 50       		.byte	0x50
 1267 00da 00000000 		.4byte	0
 1268 00de 00000000 		.4byte	0
 1269              	.LLST4:
 1270 00e2 00000000 		.4byte	.LVL19
 1271 00e6 10000000 		.4byte	.LVL20
 1272 00ea 0100     		.2byte	0x1
 1273 00ec 50       		.byte	0x50
 1274 00ed 10000000 		.4byte	.LVL20
 1275 00f1 1C000000 		.4byte	.LFE7
 1276 00f5 0400     		.2byte	0x4
 1277 00f7 F3       		.byte	0xf3
 1278 00f8 01       		.uleb128 0x1
 1279 00f9 50       		.byte	0x50
 1280 00fa 9F       		.byte	0x9f
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 31


 1281 00fb 00000000 		.4byte	0
 1282 00ff 00000000 		.4byte	0
 1283              	.LLST5:
 1284 0103 00000000 		.4byte	.LVL25
 1285 0107 06000000 		.4byte	.LVL27
 1286 010b 0100     		.2byte	0x1
 1287 010d 50       		.byte	0x50
 1288 010e 06000000 		.4byte	.LVL27
 1289 0112 1C000000 		.4byte	.LFE10
 1290 0116 0400     		.2byte	0x4
 1291 0118 F3       		.byte	0xf3
 1292 0119 01       		.uleb128 0x1
 1293 011a 50       		.byte	0x50
 1294 011b 9F       		.byte	0x9f
 1295 011c 00000000 		.4byte	0
 1296 0120 00000000 		.4byte	0
 1297              	.LLST6:
 1298 0124 04000000 		.4byte	.LVL26
 1299 0128 10000000 		.4byte	.LVL29
 1300 012c 0200     		.2byte	0x2
 1301 012e 41       		.byte	0x41
 1302 012f 9F       		.byte	0x9f
 1303 0130 10000000 		.4byte	.LVL29
 1304 0134 14000000 		.4byte	.LVL30
 1305 0138 0200     		.2byte	0x2
 1306 013a 30       		.byte	0x30
 1307 013b 9F       		.byte	0x9f
 1308 013c 14000000 		.4byte	.LVL30
 1309 0140 16000000 		.4byte	.LVL31
 1310 0144 0200     		.2byte	0x2
 1311 0146 41       		.byte	0x41
 1312 0147 9F       		.byte	0x9f
 1313 0148 16000000 		.4byte	.LVL31
 1314 014c 1C000000 		.4byte	.LFE10
 1315 0150 0100     		.2byte	0x1
 1316 0152 50       		.byte	0x50
 1317 0153 00000000 		.4byte	0
 1318 0157 00000000 		.4byte	0
 1319              		.section	.debug_aranges,"",%progbits
 1320 0000 74000000 		.4byte	0x74
 1321 0004 0200     		.2byte	0x2
 1322 0006 00000000 		.4byte	.Ldebug_info0
 1323 000a 04       		.byte	0x4
 1324 000b 00       		.byte	0
 1325 000c 0000     		.2byte	0
 1326 000e 0000     		.2byte	0
 1327 0010 00000000 		.4byte	.LFB4
 1328 0014 1C000000 		.4byte	.LFE4-.LFB4
 1329 0018 00000000 		.4byte	.LFB1
 1330 001c 18000000 		.4byte	.LFE1-.LFB1
 1331 0020 00000000 		.4byte	.LFB5
 1332 0024 1C000000 		.4byte	.LFE5-.LFB5
 1333 0028 00000000 		.4byte	.LFB3
 1334 002c 18000000 		.4byte	.LFE3-.LFB3
 1335 0030 00000000 		.4byte	.LFB6
 1336 0034 48000000 		.4byte	.LFE6-.LFB6
 1337 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 32


 1338 003c 1C000000 		.4byte	.LFE7-.LFB7
 1339 0040 00000000 		.4byte	.LFB2
 1340 0044 0A000000 		.4byte	.LFE2-.LFB2
 1341 0048 00000000 		.4byte	.LFB0
 1342 004c 1C000000 		.4byte	.LFE0-.LFB0
 1343 0050 00000000 		.4byte	.LFB8
 1344 0054 10000000 		.4byte	.LFE8-.LFB8
 1345 0058 00000000 		.4byte	.LFB9
 1346 005c 0C000000 		.4byte	.LFE9-.LFB9
 1347 0060 00000000 		.4byte	.LFB10
 1348 0064 1C000000 		.4byte	.LFE10-.LFB10
 1349 0068 00000000 		.4byte	.LFB11
 1350 006c 24000000 		.4byte	.LFE11-.LFB11
 1351 0070 00000000 		.4byte	0
 1352 0074 00000000 		.4byte	0
 1353              		.section	.debug_ranges,"",%progbits
 1354              	.Ldebug_ranges0:
 1355 0000 00000000 		.4byte	.LFB4
 1356 0004 1C000000 		.4byte	.LFE4
 1357 0008 00000000 		.4byte	.LFB1
 1358 000c 18000000 		.4byte	.LFE1
 1359 0010 00000000 		.4byte	.LFB5
 1360 0014 1C000000 		.4byte	.LFE5
 1361 0018 00000000 		.4byte	.LFB3
 1362 001c 18000000 		.4byte	.LFE3
 1363 0020 00000000 		.4byte	.LFB6
 1364 0024 48000000 		.4byte	.LFE6
 1365 0028 00000000 		.4byte	.LFB7
 1366 002c 1C000000 		.4byte	.LFE7
 1367 0030 00000000 		.4byte	.LFB2
 1368 0034 0A000000 		.4byte	.LFE2
 1369 0038 00000000 		.4byte	.LFB0
 1370 003c 1C000000 		.4byte	.LFE0
 1371 0040 00000000 		.4byte	.LFB8
 1372 0044 10000000 		.4byte	.LFE8
 1373 0048 00000000 		.4byte	.LFB9
 1374 004c 0C000000 		.4byte	.LFE9
 1375 0050 00000000 		.4byte	.LFB10
 1376 0054 1C000000 		.4byte	.LFE10
 1377 0058 00000000 		.4byte	.LFB11
 1378 005c 24000000 		.4byte	.LFE11
 1379 0060 00000000 		.4byte	0
 1380 0064 00000000 		.4byte	0
 1381              		.section	.debug_line,"",%progbits
 1382              	.Ldebug_line0:
 1383 0000 52010000 		.section	.debug_str,"MS",%progbits,1
 1383      02005400 
 1383      00000201 
 1383      FB0E0D00 
 1383      01010101 
 1384              	.LASF13:
 1385 0000 63797374 		.ascii	"cystatus\000"
 1385      61747573 
 1385      00
 1386              	.LASF28:
 1387 0009 4C43445F 		.ascii	"LCD_ShiftReg_WriteRegValue\000"
 1387      53686966 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 33


 1387      74526567 
 1387      5F577269 
 1387      74655265 
 1388              	.LASF38:
 1389 0024 4C43445F 		.ascii	"LCD_ShiftReg_GetIntStatus\000"
 1389      53686966 
 1389      74526567 
 1389      5F476574 
 1389      496E7453 
 1390              	.LASF18:
 1391 003e 4C43445F 		.ascii	"LCD_ShiftReg_Enable\000"
 1391      53686966 
 1391      74526567 
 1391      5F456E61 
 1391      626C6500 
 1392              	.LASF3:
 1393 0052 73686F72 		.ascii	"short unsigned int\000"
 1393      7420756E 
 1393      7369676E 
 1393      65642069 
 1393      6E7400
 1394              	.LASF32:
 1395 0065 4C43445F 		.ascii	"LCD_ShiftReg_ReadRegValue\000"
 1395      53686966 
 1395      74526567 
 1395      5F526561 
 1395      64526567 
 1396              	.LASF26:
 1397 007f 4C43445F 		.ascii	"LCD_ShiftReg_Init\000"
 1397      53686966 
 1397      74526567 
 1397      5F496E69 
 1397      7400
 1398              	.LASF19:
 1399 0091 4C43445F 		.ascii	"LCD_ShiftReg_DisableInt\000"
 1399      53686966 
 1399      74526567 
 1399      5F446973 
 1399      61626C65 
 1400              	.LASF9:
 1401 00a9 666C6F61 		.ascii	"float\000"
 1401      7400
 1402              	.LASF17:
 1403 00af 4C43445F 		.ascii	"LCD_ShiftReg_EnableInt\000"
 1403      53686966 
 1403      74526567 
 1403      5F456E61 
 1403      626C6549 
 1404              	.LASF7:
 1405 00c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1405      206C6F6E 
 1405      6720756E 
 1405      7369676E 
 1405      65642069 
 1406              	.LASF1:
 1407 00dd 756E7369 		.ascii	"unsigned char\000"
 1407      676E6564 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 34


 1407      20636861 
 1407      7200
 1408              	.LASF35:
 1409 00eb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1409      43313120 
 1409      352E342E 
 1409      31203230 
 1409      31363036 
 1410 011e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1410      20726576 
 1410      6973696F 
 1410      6E203233 
 1410      37373135 
 1411 0151 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1411      66756E63 
 1411      74696F6E 
 1411      2D736563 
 1411      74696F6E 
 1412              	.LASF14:
 1413 0179 72656738 		.ascii	"reg8\000"
 1413      00
 1414              	.LASF20:
 1415 017e 696E7465 		.ascii	"interruptState\000"
 1415      72727570 
 1415      74537461 
 1415      746500
 1416              	.LASF5:
 1417 018d 6C6F6E67 		.ascii	"long unsigned int\000"
 1417      20756E73 
 1417      69676E65 
 1417      6420696E 
 1417      7400
 1418              	.LASF12:
 1419 019f 75696E74 		.ascii	"uint8\000"
 1419      3800
 1420              	.LASF37:
 1421 01a5 433A5C55 		.ascii	"C:\\Users\\jrdia\\OneDrive\\Sync\\Documents\\Projec"
 1421      73657273 
 1421      5C6A7264 
 1421      69615C4F 
 1421      6E654472 
 1422 01d2 74735C4D 		.ascii	"ts\\Moving 5DOF\\PSoC Code\\5DOF_Controller\\5DOF_C"
 1422      6F76696E 
 1422      67203544 
 1422      4F465C50 
 1422      536F4320 
 1423 0201 6F6E7472 		.ascii	"ontroller.cydsn\000"
 1423      6F6C6C65 
 1423      722E6379 
 1423      64736E00 
 1424              	.LASF24:
 1425 0211 6669666F 		.ascii	"fifoId\000"
 1425      496400
 1426              	.LASF10:
 1427 0218 646F7562 		.ascii	"double\000"
 1427      6C6500
 1428              	.LASF36:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 35


 1429 021f 47656E65 		.ascii	"Generated_Source\\PSoC5\\LCD_ShiftReg.c\000"
 1429      72617465 
 1429      645F536F 
 1429      75726365 
 1429      5C50536F 
 1430              	.LASF31:
 1431 0245 4C43445F 		.ascii	"LCD_ShiftReg_WriteData\000"
 1431      53686966 
 1431      74526567 
 1431      5F577269 
 1431      74654461 
 1432              	.LASF39:
 1433 025c 4C43445F 		.ascii	"LCD_ShiftReg_initVar\000"
 1433      53686966 
 1433      74526567 
 1433      5F696E69 
 1433      74566172 
 1434              	.LASF33:
 1435 0271 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1435      74657243 
 1435      72697469 
 1435      63616C53 
 1435      65637469 
 1436              	.LASF8:
 1437 0288 756E7369 		.ascii	"unsigned int\000"
 1437      676E6564 
 1437      20696E74 
 1437      00
 1438              	.LASF29:
 1439 0295 73686966 		.ascii	"shiftData\000"
 1439      74446174 
 1439      6100
 1440              	.LASF34:
 1441 029f 43794578 		.ascii	"CyExitCriticalSection\000"
 1441      69744372 
 1441      69746963 
 1441      616C5365 
 1441      6374696F 
 1442              	.LASF22:
 1443 02b5 72657375 		.ascii	"result\000"
 1443      6C7400
 1444              	.LASF23:
 1445 02bc 4C43445F 		.ascii	"LCD_ShiftReg_SetIntMode\000"
 1445      53686966 
 1445      74526567 
 1445      5F536574 
 1445      496E744D 
 1446              	.LASF16:
 1447 02d4 73697A65 		.ascii	"sizetype\000"
 1447      74797065 
 1447      00
 1448              	.LASF6:
 1449 02dd 6C6F6E67 		.ascii	"long long int\000"
 1449      206C6F6E 
 1449      6720696E 
 1449      7400
 1450              	.LASF25:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccpyXTZr.s 			page 36


 1451 02eb 696E7465 		.ascii	"interruptSource\000"
 1451      72727570 
 1451      74536F75 
 1451      72636500 
 1452              	.LASF11:
 1453 02fb 63686172 		.ascii	"char\000"
 1453      00
 1454              	.LASF30:
 1455 0300 4C43445F 		.ascii	"LCD_ShiftReg_GetFIFOStatus\000"
 1455      53686966 
 1455      74526567 
 1455      5F476574 
 1455      4649464F 
 1456              	.LASF2:
 1457 031b 73686F72 		.ascii	"short int\000"
 1457      7420696E 
 1457      7400
 1458              	.LASF4:
 1459 0325 6C6F6E67 		.ascii	"long int\000"
 1459      20696E74 
 1459      00
 1460              	.LASF21:
 1461 032e 4C43445F 		.ascii	"LCD_ShiftReg_Stop\000"
 1461      53686966 
 1461      74526567 
 1461      5F53746F 
 1461      7000
 1462              	.LASF15:
 1463 0340 6C6F6E67 		.ascii	"long double\000"
 1463      20646F75 
 1463      626C6500 
 1464              	.LASF0:
 1465 034c 7369676E 		.ascii	"signed char\000"
 1465      65642063 
 1465      68617200 
 1466              	.LASF27:
 1467 0358 4C43445F 		.ascii	"LCD_ShiftReg_Start\000"
 1467      53686966 
 1467      74526567 
 1467      5F537461 
 1467      727400
 1468              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
